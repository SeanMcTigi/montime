#!/bin/bash


# functions

resetvars()
{
unset data
unset project
unset comment
unset billable
unset filter
unset active
f=0
}

timeprocessing()
#
# Description:  Count and print the times of a project
#
# Parameter  :  $1 - project name
#               $2 - date
#		$3 - comment
#		$4 - billable
#		$5 - filters (array by name)
#
# Std. Output:  Time values of project
#
{
  #echo "processing project: $1"
  #echo "total array elements: ${#filter[@]}"
  #echo "filter array: ${filter[@]}"
  hours=0
  for (( v=0; v<${#filter[@]}; v++ ))
  do
    h=$(grep $2${filter[v]} montime.log | awk '{ sum+=$NF } END { printf("%.2f\n",sum/3600)}')
    hours=$(echo $hours + $h | bc)
    echo "data: $2"
    echo "filter: $2${filter[v]}"
    #grep ${filter[v]} montime.log 
  done 
  if [ "$hours" != "0" ];
  then
    printf "%s: %.2f\n" "$1" "$hours" 
  fi
  totalhours=$(echo $totalhours + $hours | bc)
}

show-unmatched()
{

echo
echo "all unmatched:"

# get all filters
unset filter
i=1
for (( c=0; c<${#item[@]}; c++ ))
do
  case "${item[$c]}" in
    filter)
        if [ "$i" == "1" ];
        then
#	  filter="${value[$c]}"
	  filter="(\$0 !~ /${value[$c]}/)"
          ((i++))
        else
#           filter="$filter\|${value[$c]}"
	  filter="$filter&&(\$0 !~ /${value[$c]}/)"
        fi
echo "i, filter: $i, $filter"
        ;;
  esac
done
echo "filter: $filter"
#grep "$filter" montime.log
#cat montime.log | awk '($0 !~ /.*Navigator.*Iceweasel.*/)&&($0 !~ /.*Mail.*/)&&($0 !~ /.*dove.*/)'
#cat montime.log | awk -vfilter="$filter" '{ print filter}'
cat montime.log | awk -vfilter="$filter" filter
}

# get all projects from config
get-config()
{
i=0
while read line; do
  if [[ "$line" =~ ^[^#]*= ]]; then
    item[i]=${line%%=*}
    value[i]=${line#*=}
    ((i++))
  fi
done < conf

# debug info:
#echo "total array elements: ${#item[@]}"
#echo "item array: ${item[@]}"
}

#################################################
# main
#################################################

get-config
totalhours=0
resetvars

for (( c=0; c<${#item[@]}; c++ ))
do
  # debug info:
  #  echo "${item[$c]}=${value[$c]}"

  case "${item[$c]}" in

    data)      
	data="${value[$c]}"
	if [ "$data" == "today" ]; then
          data=`date +%Y-%m-%d`
	fi
	echo "data case: $data"
	;;

    project)   
	project="${value[$c]}"
	;;

    comment)   
	comment="${value[$c]}"
	;;

    billable)  
	billable="${value[$c]}"
	;;

    filter)    
	filter[f]="${value[$c]}"
        ((f++))
	;;

    active)
        if [ "${value[$c]}" == "1" ] ; 
        then
	  echo "Project:  $project"
          echo "Data:     $data"
          echo "Comment:  $comment"
          echo "Billable: $billable"
          echo "Filter:   $filter"
          echo "-----------------------"
	  timeprocessing "$project" "$data" "$comment" "$billable" filter
        fi
	resetvars
	;;

  esac


done

echo "Total Hours:  $totalhours"

echo 
#show-unmatched

